@startuml

package "org.quickfixj:quickfixj-core" as core {
component quickfixj_core
}

package "org.quickfixj:quickfixj-base"  as base {
component quickfixj_base
}

package "com.some-company:application"  as customapp {
component application
}

package "com.some-company:messages"  as custom_msg {
package field
package fixlatest
package fixt11
package fix50sp2
package fix44
}
note top  of custom_msg
Example of a single published jar representing 
one or more versions of the FIX protocol
end note

package "com.some-company:messages-fixlatest"  as customfixlatest {
package fixlatest_field
package fixlatest_messages
}

package "com.some-company:messages-fixt11"  as customfixt11 {
package fixt11_field
package fixt11_messages
}

customfixlatest  -up-> customfixt11 : runtime depends

note bottom of customfixlatest
An alternative way of publishing packages as seen in the QuickFIX/J build,
This is more complex and may not offer any benefit for a custom build.
Package names would be the same as in the single jar packaging but
Plant UML does not render this correctly so the package names are changed
end note

core -up-> base

customfixlatest -up-> base
customfixt11 -up-> base

customapp -up-> core
customapp -up-> custom_msg
custom_msg -up-> base
customapp .up.> customfixlatest : alternative message packaging/dependency

@enduml
